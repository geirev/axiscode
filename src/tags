!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
100	m_readexperiment.F90	/^         100 numberoflines=i-1$/;"	l	function:numberoflines	file:
100	m_readfootcor.F90	/^   100 close(10)$/;"	l	subroutine:readfootcor	file:
100	m_readfootdata.F90	/^      100 nrlines=i-1$/;"	l	subroutine:readfootdata	file:
100	m_readposcor.F90	/^   100 close(10)$/;"	l	subroutine:readposcor	file:
accbias	m_accbias.F90	/^subroutine accbias(/;"	s	module:m_accbias
assign_coord	m_state.F90	/^   subroutine assign_coord(/;"	s	module:m_state
assign_experiment	m_state.F90	/^   subroutine assign_experiment(/;"	s	module:m_state
axis	main.F90	/^program axis$/;"	p
c_black	m_ansi_colors.F90	/^  character(len=*), parameter :: c_black /;"	v	module:m_ansi_colors
c_blue	m_ansi_colors.F90	/^  character(len=*), parameter :: c_blue /;"	v	module:m_ansi_colors
c_clear	m_ansi_colors.F90	/^  character(len=*), parameter :: c_clear /;"	v	module:m_ansi_colors
c_cyan	m_ansi_colors.F90	/^  character(len=*), parameter :: c_cyan /;"	v	module:m_ansi_colors
c_end	m_ansi_colors.F90	/^  character(len=1), parameter :: c_end /;"	v	module:m_ansi_colors
c_esc	m_ansi_colors.F90	/^  character(len=1), parameter :: c_esc /;"	v	module:m_ansi_colors
c_green	m_ansi_colors.F90	/^  character(len=*), parameter :: c_green /;"	v	module:m_ansi_colors
c_magenta	m_ansi_colors.F90	/^  character(len=*), parameter :: c_magenta /;"	v	module:m_ansi_colors
c_red	m_ansi_colors.F90	/^  character(len=*), parameter :: c_red /;"	v	module:m_ansi_colors
c_start	m_ansi_colors.F90	/^  character(len=2), parameter :: c_start /;"	v	module:m_ansi_colors
c_white	m_ansi_colors.F90	/^  character(len=*), parameter :: c_white /;"	v	module:m_ansi_colors
c_yellow	m_ansi_colors.F90	/^  character(len=*), parameter :: c_yellow /;"	v	module:m_ansi_colors
color	m_ansi_colors.F90	/^  function color(/;"	f	module:m_ansi_colors
coord	m_state.F90	/^   type coord$/;"	t	module:m_state
dir_project	m_setup.F90	/^   character(len=100) :: dir_project=/;"	v	module:m_setup
dirh	m_state.F90	/^      real dirh(/;"	k	type:footdata
dirv	m_state.F90	/^      real dirv(/;"	k	type:footdata
dist	m_state.F90	/^      real dist(/;"	k	type:footdata
dist1	m_state.F90	/^      real        :: dist1(/;"	k	type:experiment
dist2	m_state.F90	/^      real        :: dist2(/;"	k	type:experiment
distpos	m_distpos.F90	/^subroutine distpos(/;"	s	module:m_distpos
ed1	m_state.F90	/^      type(coord) :: ed1(/;"	k	type:experiment
ed9	m_state.F90	/^      type(coord) :: ed9(/;"	k	type:experiment
ee6	m_state.F90	/^      type(coord) :: ee6(/;"	k	type:experiment
efa	m_state.F90	/^      type(coord) :: efa(/;"	k	type:experiment
eff	m_state.F90	/^      type(coord) :: eff(/;"	k	type:experiment
experiment	m_state.F90	/^   type experiment$/;"	t	module:m_state
expr	m_state.F90	/^      type (experiment) :: expr(/;"	k	type:participant
f00	m_state.F90	/^      type(coord) :: f00(/;"	k	type:experiment
foot	m_state.F90	/^      type (footd/;"	k	type:participant
footcor	m_footcor.F90	/^subroutine footcor(/;"	s	module:m_footcor
footcor	m_readfootcor.F90	/^real :: footcor(/;"	v	module:m_readfootcor
footcorfile	m_setup.F90	/^   character(len=62)  :: footcorfile=/;"	v	module:m_setup
footdata	m_state.F90	/^   type footdata$/;"	t	module:m_state
footpointsdir	m_footpointsdir.F90	/^subroutine footpointsdir(/;"	s	module:m_footpointsdir
id	main.F90	/^   integer :: id$/;"	v	program:axis
ip	main.F90	/^   integer :: ip$/;"	v	program:axis
is	main.F90	/^   integer :: is$/;"	v	program:axis
led1	m_state.F90	/^      logical lpos,led1,/;"	k	type:experiment
led9	m_state.F90	/^      logical lpos,led1,led9,/;"	k	type:experiment
lee6	m_state.F90	/^      logical lpos,led1,led9,lee6,/;"	k	type:experiment
lefa	m_state.F90	/^      logical lpos,led1,led9,lee6,lefa,/;"	k	type:experiment
leff	m_state.F90	/^      logical lpos,led1,led9,lee6,lefa,leff,/;"	k	type:experiment
lf00	m_state.F90	/^      logical lpos,led1,led9,lee6,lefa,leff,lf00$/;"	k	type:experiment
lpos	m_state.F90	/^      logical lpos,/;"	k	type:experiment
lpstat	m_readexperiment.F90	/^   integer function lpstat(/;"	f	module:m_readexperiment
m_accbias	m_accbias.F90	/^module m_accbias$/;"	m
m_ansi_colors	m_ansi_colors.F90	/^module m_ansi_colors$/;"	m
m_distpos	m_distpos.F90	/^module m_distpos$/;"	m
m_footcor	m_footcor.F90	/^module m_footcor$/;"	m
m_footpointsdir	m_footpointsdir.F90	/^module m_footpointsdir$/;"	m
m_newnrlines	m_newnrlines.F90	/^module m_newnrlines$/;"	m
m_pickfootpoint	m_pickfootpoint.F90	/^module m_pickfootpoint$/;"	m
m_poscor	m_poscor.F90	/^module m_poscor$/;"	m
m_readexperiment	m_readexperiment.F90	/^module m_readexperiment$/;"	m
m_readfootcor	m_readfootcor.F90	/^module m_readfootcor$/;"	m
m_readfootdata	m_readfootdata.F90	/^module m_readfootdata$/;"	m
m_readposcor	m_readposcor.F90	/^module m_readposcor$/;"	m
m_referencepoint	m_referencepoint.F90	/^module m_referencepoint$/;"	m
m_referencepos	m_referencepos.F90	/^module m_referencepos$/;"	m
m_setup	m_setup.F90	/^module m_setup$/;"	m
m_speedcalc	m_speedcalc.F90	/^module m_speedcalc$/;"	m
m_state	m_state.F90	/^module m_state$/;"	m
m_writeexperiment	m_writeexperiment.F90	/^module m_writeexperiment$/;"	m
m_writefootdata	m_writefootdata.F90	/^module m_writefootdata$/;"	m
m_writeoutfile	m_writeoutfile.F90	/^module m_writeoutfile$/;"	m
ned1	m_state.F90	/^      integer npos,ned1,/;"	k	type:experiment
ned9	m_state.F90	/^      integer npos,ned1,ned9,/;"	k	type:experiment
nee6	m_state.F90	/^      integer npos,ned1,ned9,nee6,/;"	k	type:experiment
nefa	m_state.F90	/^      integer npos,ned1,ned9,nee6,nefa,/;"	k	type:experiment
neff	m_state.F90	/^      integer npos,ned1,ned9,nee6,nefa,neff,/;"	k	type:experiment
newnrlines	m_newnrlines.F90	/^subroutine newnrlines(/;"	s	module:m_newnrlines
nf00	m_state.F90	/^      integer npos,ned1,ned9,nee6,nefa,neff,nf00$/;"	k	type:experiment
npos	m_state.F90	/^      integer npos,/;"	k	type:experiment
nrdirections	m_state.F90	/^   integer, parameter :: nrdirections=/;"	v	module:m_state
nrfootpoints	m_state.F90	/^   integer, parameter :: nrfootpoints=/;"	v	module:m_state
nrlines	m_state.F90	/^      integer nrlines$/;"	k	type:experiment
nrlinesh	m_state.F90	/^      integer nrlinesh$/;"	k	type:footdata
nrlinesv	m_state.F90	/^      integer nrlinesv$/;"	k	type:footdata
nrlmax	m_state.F90	/^   integer, parameter :: nrlmax=/;"	v	module:m_state
nrparticipants	m_state.F90	/^   integer, parameter :: nrparticipants=/;"	v	module:m_state
nrspeeds	m_state.F90	/^   integer, parameter :: nrspeeds=/;"	v	module:m_state
numberoflines	m_readexperiment.F90	/^   integer function numberoflines(/;"	f	module:m_readexperiment
part	m_state.F90	/^   type (parti/;"	v	module:m_state
participant	m_state.F90	/^   type participant$/;"	t	module:m_state
pickfootpoint	m_pickfootpoint.F90	/^subroutine pickfootpoint(/;"	s	module:m_pickfootpoint
pos1	m_state.F90	/^      type(coord) :: pos1(/;"	k	type:experiment
pos2	m_state.F90	/^      type(coord) :: pos2(/;"	k	type:experiment
poscor	m_poscor.F90	/^subroutine poscor(/;"	s	module:m_poscor
poscorfile	m_setup.F90	/^   character(len=65)  :: poscorfile=/;"	v	module:m_setup
readaccdata	m_readexperiment.F90	/^   function readaccdata(/;"	f	module:m_readexperiment
readexperiment	m_readexperiment.F90	/^subroutine readexperiment(/;"	s	module:m_readexperiment
readfootcor	m_readfootcor.F90	/^subroutine readfootcor$/;"	s	module:m_readfootcor
readfootdata	m_readfootdata.F90	/^subroutine readfootdata(/;"	s	module:m_readfootdata
readposcor	m_readposcor.F90	/^subroutine readposcor$/;"	s	module:m_readposcor
referencepoint	m_referencepoint.F90	/^subroutine referencepoint(/;"	s	module:m_referencepoint
referencepos	m_referencepos.F90	/^subroutine referencepos(/;"	s	module:m_referencepos
speed	m_state.F90	/^      real        :: speed(/;"	k	type:experiment
speedcalc	m_speedcalc.F90	/^subroutine speedcalc(/;"	s	module:m_speedcalc
subdir_acc	m_setup.F90	/^   character(len=3)   :: subdir_acc=/;"	v	module:m_setup
subdir_accbias	m_setup.F90	/^   character(len=8)   :: subdir_accbias=/;"	v	module:m_setup
subdir_foot	m_setup.F90	/^   character(len=7)   :: subdir_foot=/;"	v	module:m_setup
subdir_pos	m_setup.F90	/^   character(len=3)   :: subdir_pos=/;"	v	module:m_setup
subdir_posbias	m_setup.F90	/^   character(len=8)   :: subdir_posbias=/;"	v	module:m_setup
writeexperiment	m_writeexperiment.F90	/^subroutine writeexperiment(/;"	s	module:m_writeexperiment
writefootdata	m_writefootdata.F90	/^subroutine writefootdata(/;"	s	module:m_writefootdata
writeoutfile	m_writeoutfile.F90	/^subroutine writeoutfile(/;"	s	module:m_writeoutfile
x	m_state.F90	/^      real x$/;"	k	type:coord
xh	m_state.F90	/^      real xh(/;"	k	type:footdata
xorigo	m_state.F90	/^      real xorigo,/;"	k	type:participant
xposcor	m_readposcor.F90	/^real :: xposcor(/;"	v	module:m_readposcor
xstart1	m_state.F90	/^      real xorigo,yorigo,xstart1,/;"	k	type:participant
xstart2	m_state.F90	/^      real xorigo,yorigo,xstart1,ystart1,zstart1,xstart2,/;"	k	type:participant
xv	m_state.F90	/^      real xv(/;"	k	type:footdata
y	m_state.F90	/^      real y$/;"	k	type:coord
yh	m_state.F90	/^      real yh(/;"	k	type:footdata
yorigo	m_state.F90	/^      real xorigo,yorigo,/;"	k	type:participant
ystart1	m_state.F90	/^      real xorigo,yorigo,xstart1,ystart1,/;"	k	type:participant
ystart2	m_state.F90	/^      real xorigo,yorigo,xstart1,ystart1,zstart1,xstart2,ystart2,/;"	k	type:participant
yv	m_state.F90	/^      real yv(/;"	k	type:footdata
z	m_state.F90	/^      real z$/;"	k	type:coord
zstart1	m_state.F90	/^      real xorigo,yorigo,xstart1,ystart1,zstart1,/;"	k	type:participant
zstart2	m_state.F90	/^      real xorigo,yorigo,xstart1,ystart1,zstart1,xstart2,ystart2,zstart2$/;"	k	type:participant
